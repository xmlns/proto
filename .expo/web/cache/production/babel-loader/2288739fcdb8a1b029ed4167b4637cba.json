{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import{FontAwesome}from'@expo/vector-icons';import{createBottomTabNavigator}from'@react-navigation/bottom-tabs';import{NavigationContainer,DefaultTheme,DarkTheme}from'@react-navigation/native';import{createNativeStackNavigator}from'@react-navigation/native-stack';import*as React from'react';import Pressable from\"react-native-web/dist/exports/Pressable\";import Colors from\"../constants/Colors\";import useColorScheme from\"../hooks/useColorScheme\";import ModalScreen from\"../screens/ModalScreen\";import NotFoundScreen from\"../screens/NotFoundScreen\";import TabOneScreen from\"../screens/TabOneScreen\";import TabTwoScreen from\"../screens/TabTwoScreen\";import LinkingConfiguration from\"./LinkingConfiguration\";export default function Navigation(_ref){var colorScheme=_ref.colorScheme;return React.createElement(NavigationContainer,{linking:LinkingConfiguration,theme:colorScheme==='dark'?DarkTheme:DefaultTheme},React.createElement(RootNavigator,null));}var Stack=createNativeStackNavigator();function RootNavigator(){return React.createElement(Stack.Navigator,null,React.createElement(Stack.Screen,{name:\"Root\",component:BottomTabNavigator,options:{headerShown:false}}),React.createElement(Stack.Screen,{name:\"NotFound\",component:NotFoundScreen,options:{title:'Oops!'}}),React.createElement(Stack.Group,{screenOptions:{presentation:'modal'}},React.createElement(Stack.Screen,{name:\"Modal\",component:ModalScreen})));}var BottomTab=createBottomTabNavigator();function BottomTabNavigator(){var colorScheme=useColorScheme();return React.createElement(BottomTab.Navigator,{initialRouteName:\"TabOne\",screenOptions:{tabBarActiveTintColor:Colors[colorScheme].tint}},React.createElement(BottomTab.Screen,{name:\"TabOne\",component:TabOneScreen,options:function options(_ref2){var navigation=_ref2.navigation;return{title:'Tab One',tabBarIcon:function tabBarIcon(_ref3){var color=_ref3.color;return React.createElement(TabBarIcon,{name:\"code\",color:color});},headerRight:function headerRight(){return React.createElement(Pressable,{onPress:function onPress(){return navigation.navigate('Modal');},style:function style(_ref4){var pressed=_ref4.pressed;return{opacity:pressed?0.5:1};}},React.createElement(FontAwesome,{name:\"info-circle\",size:25,color:Colors[colorScheme].text,style:{marginRight:15}}));}};}}),React.createElement(BottomTab.Screen,{name:\"TabTwo\",component:TabTwoScreen,options:{title:'Tab Two',tabBarIcon:function tabBarIcon(_ref5){var color=_ref5.color;return React.createElement(TabBarIcon,{name:\"code\",color:color});}}}));}function TabBarIcon(props){return React.createElement(FontAwesome,_extends({size:30,style:{marginBottom:-3}},props));}","map":{"version":3,"sources":["C:/Users/amogh/TestReactNativeApp/navigation/index.tsx"],"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","TabOneScreen","TabTwoScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n          title: 'Tab One',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          title: 'Tab Two',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}