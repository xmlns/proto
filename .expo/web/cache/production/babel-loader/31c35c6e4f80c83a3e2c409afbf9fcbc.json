{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"colors\",\"locations\",\"start\",\"end\"];function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import processColor from\"react-native-web/dist/exports/processColor\";import NativeLinearGradient from\"./NativeLinearGradient\";export var LinearGradient=function(_React$Component){_inherits(LinearGradient,_React$Component);var _super=_createSuper(LinearGradient);function LinearGradient(){_classCallCheck(this,LinearGradient);return _super.apply(this,arguments);}_createClass(LinearGradient,[{key:\"render\",value:function render(){var _this$props=this.props,colors=_this$props.colors,locations=_this$props.locations,start=_this$props.start,end=_this$props.end,props=_objectWithoutProperties(_this$props,_excluded);var resolvedLocations=locations;if(locations&&colors.length!==locations.length){console.warn('LinearGradient colors and locations props should be arrays of the same length');resolvedLocations=locations.slice(0,colors.length);}return React.createElement(NativeLinearGradient,Object.assign({},props,{colors:Platform.select({web:colors,default:colors.map(processColor)}),locations:resolvedLocations,startPoint:_normalizePoint(start),endPoint:_normalizePoint(end)}));}}]);return LinearGradient;}(React.Component);function _normalizePoint(point){if(!point){return undefined;}if(Array.isArray(point)&&point.length!==2){console.warn('start and end props for LinearGradient must be of the format [x,y] or {x, y}');return undefined;}return Array.isArray(point)?point:[point.x,point.y];}","map":{"version":3,"sources":["../src/LinearGradient.tsx"],"names":[],"mappings":"6oCAAA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,C,kIAGA,MAAO,CAAA,oBAAP,8BA0DA,UAAa,CAAA,cAAb,oQACE,iBAAM,CACJ,gBAAoD,KAAK,KAAzD,CAAQ,MAAR,aAAQ,MAAR,CAAgB,SAAhB,aAAgB,SAAhB,CAA2B,KAA3B,aAA2B,KAA3B,CAAkC,GAAlC,aAAkC,GAAlC,CAA0C,KAA1C,iDACA,GAAI,CAAA,iBAAiB,CAAG,SAAxB,CACA,GAAI,SAAS,EAAI,MAAM,CAAC,MAAP,GAAkB,SAAS,CAAC,MAA7C,CAAqD,CACnD,OAAO,CAAC,IAAR,CAAa,+EAAb,EACA,iBAAiB,CAAG,SAAS,CAAC,KAAV,CAAgB,CAAhB,CAAmB,MAAM,CAAC,MAA1B,CAApB,CACD,CAED,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,oBAAD,CAAqB,MAAA,CAAA,MAAA,CAAA,EAAA,CACf,KADe,CACV,CACT,MAAM,CAAE,QAAQ,CAAC,MAAT,CAAgB,CACtB,GAAG,CAAE,MADiB,CAEtB,OAAO,CAAE,MAAM,CAAC,GAAP,CAAW,YAAX,CAFa,CAAhB,CADC,CAKT,SAAS,CAAE,iBALF,CAMT,UAAU,CAAE,eAAe,CAAC,KAAD,CANlB,CAOT,QAAQ,CAAE,eAAe,CAAC,GAAD,CAPhB,CADU,CAArB,CADF,CAYD,CArBH,4BAAoC,KAAK,CAAC,SAA1C,EAwBA,QAAS,CAAA,eAAT,CACE,KADF,CAC+C,CAE7C,GAAI,CAAC,KAAL,CAAY,CACV,MAAO,CAAA,SAAP,CACD,CAED,GAAI,KAAK,CAAC,OAAN,CAAc,KAAd,GAAwB,KAAK,CAAC,MAAN,GAAiB,CAA7C,CAAgD,CAC9C,OAAO,CAAC,IAAR,CAAa,8EAAb,EACA,MAAO,CAAA,SAAP,CACD,CAED,MAAO,CAAA,KAAK,CAAC,OAAN,CAAc,KAAd,EAAuB,KAAvB,CAA+B,CAAC,KAAK,CAAC,CAAP,CAAU,KAAK,CAAC,CAAhB,CAAtC,CACD","sourcesContent":["import * as React from 'react';\nimport { Platform, processColor, View } from 'react-native';\n\nimport NativeLinearGradient from './NativeLinearGradient';\nimport { NativeLinearGradientPoint } from './NativeLinearGradient.types';\n\n// @needsAudit\n/**\n * An object `{ x: number; y: number }` or array `[x, y]` that represents the point\n * at which the gradient starts or ends, as a fraction of the overall size of the gradient ranging\n * from `0` to `1`, inclusive.\n */\nexport type LinearGradientPoint =\n  | {\n      /**\n       * A number ranging from `0` to `1`, representing the position of gradient transformation.\n       */\n      x: number;\n      /**\n       * A number ranging from `0` to `1`, representing the position of gradient transformation.\n       */\n      y: number;\n    }\n  | NativeLinearGradientPoint;\n\n// @needsAudit\nexport type LinearGradientProps = {\n  /**\n   * An array of colors that represent stops in the gradient. At least two colors are required\n   * (for a single-color background, use the `style.backgroundColor` prop on a `View` component).\n   */\n  colors: string[];\n  /**\n   * An array that contains `number`s ranging from `0` to `1`, inclusive, and is the same length as the `colors` property.\n   * Each number indicates a color-stop location where each respective color should be located.\n   *\n   * For example, `[0.5, 0.8]` would render:\n   * - the first color, solid, from the beginning of the gradient view to 50% through (the middle);\n   * - a gradient from the first color to the second from the 50% point to the 80% point; and\n   * - the second color, solid, from the 80% point to the end of the gradient view.\n   *\n   * > The color-stop locations must be ascending from least to greatest.\n   */\n  locations?: number[] | null;\n  /**\n   * For example, `{ x: 0.1, y: 0.2 }` means that the gradient will start `10%` from the left and `20%` from the top.\n   *\n   * **On web**, this only changes the angle of the gradient because CSS gradients don't support changing the starting position.\n   */\n  start?: LinearGradientPoint | null;\n  /**\n   * For example, `{ x: 0.1, y: 0.2 }` means that the gradient will end `10%` from the left and `20%` from the bottom.\n   *\n   * **On web**, this only changes the angle of the gradient because CSS gradients don't support changing the end position.\n   */\n  end?: LinearGradientPoint | null;\n} & React.ComponentProps<typeof View>;\n\n/**\n * Renders a native view that transitions between multiple colors in a linear direction.\n */\nexport class LinearGradient extends React.Component<LinearGradientProps> {\n  render() {\n    const { colors, locations, start, end, ...props } = this.props;\n    let resolvedLocations = locations;\n    if (locations && colors.length !== locations.length) {\n      console.warn('LinearGradient colors and locations props should be arrays of the same length');\n      resolvedLocations = locations.slice(0, colors.length);\n    }\n\n    return (\n      <NativeLinearGradient\n        {...props}\n        colors={Platform.select({\n          web: colors as any,\n          default: colors.map(processColor),\n        })}\n        locations={resolvedLocations}\n        startPoint={_normalizePoint(start)}\n        endPoint={_normalizePoint(end)}\n      />\n    );\n  }\n}\n\nfunction _normalizePoint(\n  point: LinearGradientPoint | null | undefined\n): NativeLinearGradientPoint | undefined {\n  if (!point) {\n    return undefined;\n  }\n\n  if (Array.isArray(point) && point.length !== 2) {\n    console.warn('start and end props for LinearGradient must be of the format [x,y] or {x, y}');\n    return undefined;\n  }\n\n  return Array.isArray(point) ? point : [point.x, point.y];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}