{"ast":null,"code":"import{getHeaderTitle,Header,HeaderBackButton,SafeAreaProviderCompat,Screen}from'@react-navigation/elements';import*as React from'react';import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";export default function NativeStackView(_ref){var state=_ref.state,descriptors=_ref.descriptors;return React.createElement(SafeAreaProviderCompat,null,React.createElement(View,{style:styles.container},state.routes.map(function(route,i){var _state$routes;var isFocused=state.index===i;var canGoBack=i!==0;var previousKey=(_state$routes=state.routes[i-1])===null||_state$routes===void 0?void 0:_state$routes.key;var previousDescriptor=previousKey?descriptors[previousKey]:undefined;var _descriptors$route$ke=descriptors[route.key],options=_descriptors$route$ke.options,navigation=_descriptors$route$ke.navigation,render=_descriptors$route$ke.render;var header=options.header,headerShown=options.headerShown,headerTintColor=options.headerTintColor,headerBackImageSource=options.headerBackImageSource,headerLeft=options.headerLeft,headerRight=options.headerRight,headerTitle=options.headerTitle,headerTitleAlign=options.headerTitleAlign,headerTitleStyle=options.headerTitleStyle,headerStyle=options.headerStyle,headerShadowVisible=options.headerShadowVisible,headerTransparent=options.headerTransparent,contentStyle=options.contentStyle;return React.createElement(Screen,{key:route.key,focused:isFocused,route:route,navigation:navigation,headerShown:headerShown,headerTransparent:headerTransparent,header:header!==undefined?header({back:previousDescriptor?{title:getHeaderTitle(previousDescriptor.options,previousDescriptor.route.name)}:undefined,options:options,route:route,navigation:navigation}):React.createElement(Header,{title:getHeaderTitle(options,route.name),headerTintColor:headerTintColor,headerLeft:typeof headerLeft==='function'?function(_ref2){var tintColor=_ref2.tintColor;return headerLeft({tintColor:tintColor});}:headerLeft===undefined&&canGoBack?function(_ref3){var tintColor=_ref3.tintColor;return React.createElement(HeaderBackButton,{tintColor:tintColor,backImage:headerBackImageSource!==undefined?function(){return React.createElement(Image,{source:headerBackImageSource,style:[styles.backImage,{tintColor:tintColor}]});}:undefined,onPress:navigation.goBack,canGoBack:canGoBack});}:headerLeft,headerRight:typeof headerRight==='function'?function(_ref4){var tintColor=_ref4.tintColor;return headerRight({tintColor:tintColor});}:headerRight,headerTitle:typeof headerTitle==='function'?function(_ref5){var children=_ref5.children,tintColor=_ref5.tintColor;return headerTitle({children:children,tintColor:tintColor});}:headerTitle,headerTitleAlign:headerTitleAlign,headerTitleStyle:headerTitleStyle,headerStyle:[headerTransparent?{position:'absolute',backgroundColor:'transparent'}:null,headerStyle,headerShadowVisible===false?{shadowOpacity:0,borderBottomWidth:0}:null]}),style:[StyleSheet.absoluteFill,{display:isFocused?'flex':'none'}]},React.createElement(View,{style:[styles.contentContainer,contentStyle]},render()));})));}var styles=StyleSheet.create({container:{flex:1},contentContainer:{flex:1},backImage:{height:24,width:24,margin:3,resizeMode:'contain'}});","map":{"version":3,"sources":["NativeStackView.tsx"],"names":["descriptors","styles","container","isFocused","state","canGoBack","i","previousKey","previousDescriptor","render","route","contentStyle","header","back","title","getHeaderTitle","options","navigation","tintColor","headerLeft","headerRight","headerTitle","children","headerTransparent","position","backgroundColor","shadowOpacity","borderBottomWidth","StyleSheet","display","flex","contentContainer","backImage","height","width","margin","resizeMode"],"mappings":"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","sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  HeaderBackButton,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport type {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n} from '../types';\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  // This is used for the native implementation of the stack.\n  // eslint-disable-next-line react/no-unused-prop-types\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nexport default function NativeStackView({ state, descriptors }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n          const isFocused = state.index === i;\n          const canGoBack = i !== 0;\n          const previousKey = state.routes[i - 1]?.key;\n          const previousDescriptor = previousKey\n            ? descriptors[previousKey]\n            : undefined;\n          const { options, navigation, render } = descriptors[route.key];\n\n          const {\n            header,\n            headerShown,\n            headerTintColor,\n            headerBackImageSource,\n            headerLeft,\n            headerRight,\n            headerTitle,\n            headerTitleAlign,\n            headerTitleStyle,\n            headerStyle,\n            headerShadowVisible,\n            headerTransparent,\n            contentStyle,\n          } = options;\n\n          return (\n            <Screen\n              key={route.key}\n              focused={isFocused}\n              route={route}\n              navigation={navigation}\n              headerShown={headerShown}\n              headerTransparent={headerTransparent}\n              header={\n                header !== undefined ? (\n                  header({\n                    back: previousDescriptor\n                      ? {\n                          title: getHeaderTitle(\n                            previousDescriptor.options,\n                            previousDescriptor.route.name\n                          ),\n                        }\n                      : undefined,\n                    options,\n                    route,\n                    navigation,\n                  })\n                ) : (\n                  <Header\n                    title={getHeaderTitle(options, route.name)}\n                    headerTintColor={headerTintColor}\n                    headerLeft={\n                      typeof headerLeft === 'function'\n                        ? ({ tintColor }) => headerLeft({ tintColor })\n                        : headerLeft === undefined && canGoBack\n                        ? ({ tintColor }) => (\n                            <HeaderBackButton\n                              tintColor={tintColor}\n                              backImage={\n                                headerBackImageSource !== undefined\n                                  ? () => (\n                                      <Image\n                                        source={headerBackImageSource}\n                                        style={[\n                                          styles.backImage,\n                                          { tintColor },\n                                        ]}\n                                      />\n                                    )\n                                  : undefined\n                              }\n                              onPress={navigation.goBack}\n                              canGoBack={canGoBack}\n                            />\n                          )\n                        : headerLeft\n                    }\n                    headerRight={\n                      typeof headerRight === 'function'\n                        ? ({ tintColor }) => headerRight({ tintColor })\n                        : headerRight\n                    }\n                    headerTitle={\n                      typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) =>\n                            headerTitle({ children, tintColor })\n                        : headerTitle\n                    }\n                    headerTitleAlign={headerTitleAlign}\n                    headerTitleStyle={headerTitleStyle}\n                    headerStyle={[\n                      headerTransparent\n                        ? {\n                            position: 'absolute',\n                            backgroundColor: 'transparent',\n                          }\n                        : null,\n                      headerStyle,\n                      headerShadowVisible === false\n                        ? { shadowOpacity: 0, borderBottomWidth: 0 }\n                        : null,\n                    ]}\n                  />\n                )\n              }\n              style={[\n                StyleSheet.absoluteFill,\n                { display: isFocused ? 'flex' : 'none' },\n              ]}\n            >\n              <View style={[styles.contentContainer, contentStyle]}>\n                {render()}\n              </View>\n            </Screen>\n          );\n        })}\n      </View>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}