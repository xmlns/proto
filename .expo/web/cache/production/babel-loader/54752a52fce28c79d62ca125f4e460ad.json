{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useEffect,useState}from'react';import Button from\"react-native-web/dist/exports/Button\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Image from\"react-native-web/dist/exports/Image\";import{LinearGradient}from'expo-linear-gradient';import{Text,View}from\"./Themed\";import{ScrollView}from'react-native-gesture-handler';var baseUrl='https://api.spoonacular.com/recipes';var apiKey='05f3e5cbe3194079a0484c97fa512c66';var safeEncodeURIComponent=function safeEncodeURIComponent(raw){return encodeURIComponent(raw).replace(/'/g,\"%27\");};var placeholderText=\"Type a list of ingredients\";var RecipeSearch=function RecipeSearch(props){return React.createElement(View,null);};var Recipes=function Recipes(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),query=_useState4[0],setQuery=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];var getRecipesFromQuery=function getRecipesFromQuery(){var apiUrl,response,json;return _regeneratorRuntime.async(function getRecipesFromQuery$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!(query&&query.toString().length>0)){_context.next=13;break;}apiUrl=baseUrl+\"/complexSearch?apiKey=\"+apiKey+\"&query=\"+query;console.log(\"formed URL: \"+apiUrl);_context.next=6;return _regeneratorRuntime.awrap(fetch(apiUrl));case 6:response=_context.sent;_context.next=9;return _regeneratorRuntime.awrap(response.json());case 9:json=_context.sent;console.log(json.results);setResults(json.results);setLoading(false);case 13:_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 18:case\"end\":return _context.stop();}}},null,null,[[0,15]],Promise);};return React.createElement(View,null,React.createElement(TextInput,{style:styles.textInput,onChangeText:setQuery,value:query,placeholder:placeholderText}),React.createElement(Button,{title:\"Go!\",style:styles.Button,onPress:function _callee(){return _regeneratorRuntime.async(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading(true);getRecipesFromQuery();case 2:case\"end\":return _context2.stop();}}},null,null,null,Promise);}}),isLoading?React.createElement(Text,null,\"Loading...\"):React.createElement(LinearGradient,{colors:[\"rgba(0,0,0,0.05)\",\"rgba(0,0,0,0)\"]},React.createElement(ScrollView,{style:styles.scrollView},React.createElement(FlatList,{data:results,keyExtractor:function keyExtractor(result){return result.id.toString();},renderItem:function renderItem(_ref){var item=_ref.item;return React.createElement(View,null,React.createElement(Text,{style:styles.recipeName},item.title),React.createElement(Image,{resizeMode:'center',style:styles.tinyLogo,source:{uri:item.image.toString()}}));}}))));};export default Recipes;var styles=StyleSheet.create({tinyLogo:{width:200,height:200,alignItems:'center',marginLeft:270},getStartedText:{fontSize:17,lineHeight:24,textAlign:'center'},textInput:{color:'white',fontSize:50},Button:{paddingTop:'10px'},scrollView:{marginHorizontal:20,width:760,height:480},recipeName:{fontSize:20,textAlign:'center'}});","map":{"version":3,"sources":["C:/Users/amogh/TestReactNativeApp/components/recipes.js"],"names":["React","useEffect","useState","LinearGradient","Text","View","ScrollView","baseUrl","apiKey","safeEncodeURIComponent","raw","encodeURIComponent","replace","placeholderText","RecipeSearch","props","Recipes","isLoading","setLoading","query","setQuery","results","setResults","getRecipesFromQuery","toString","length","apiUrl","console","log","fetch","response","json","error","styles","textInput","Button","scrollView","result","id","item","recipeName","title","tinyLogo","uri","image","StyleSheet","create","width","height","alignItems","marginLeft","getStartedText","fontSize","lineHeight","textAlign","color","paddingTop","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, StyleSheet, TouchableOpacity, TextInput, FlatList, Image } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nimport { Text, View } from './Themed';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nconst baseUrl = 'https://api.spoonacular.com/recipes';\r\nconst apiKey = '05f3e5cbe3194079a0484c97fa512c66';\r\n\r\nconst safeEncodeURIComponent = (raw) =>\r\n{\r\n    return encodeURIComponent(raw).replace(/'/g, \"%27\");\r\n}\r\n\r\n\r\nconst placeholderText = \"Type a list of ingredients\";\r\n\r\nconst RecipeSearch = props =>\r\n{\r\n    return (\r\n        <View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst Recipes = props =>\r\n{\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [results, setResults] = useState([]);\r\n\r\n    const getRecipesFromQuery = async () => {\r\n        try {\r\n            if (query && query.toString().length > 0) {\r\n              let apiUrl = `${baseUrl}/complexSearch?apiKey=${apiKey}&query=${query}`;\r\n            \r\n              console.log(`formed URL: ${apiUrl}`);\r\n              const response = await fetch(apiUrl);\r\n              const json = await response.json();\r\n              console.log(json.results);\r\n              setResults(json.results);\r\n              setLoading(false);\r\n            }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          onChangeText={setQuery}\r\n          value={query}\r\n          placeholder={placeholderText}\r\n        />\r\n\r\n        <Button title=\"Go!\" style={styles.Button} onPress={async () => { setLoading(true); getRecipesFromQuery() }} />\r\n\r\n\r\n        {isLoading ? <Text>Loading...</Text> :\r\n        (\r\n        <LinearGradient colors={[\"rgba(0,0,0,0.05)\", \"rgba(0,0,0,0)\"]}>\r\n            <ScrollView style={styles.scrollView}>\r\n            <FlatList\r\n                data={results}\r\n                keyExtractor={ result => result.id.toString() }\r\n                renderItem={({item}) => (\r\n                    <View>\r\n                      <Text style={styles.recipeName}>{item.title}</Text>\r\n                      <Image resizeMode={'center'} style={styles.tinyLogo} source={{ uri: item.image.toString() }}></Image>\r\n                    </View>\r\n                )}\r\n                />\r\n            </ScrollView>\r\n        </LinearGradient>)}\r\n        </View>\r\n    );\r\n};\r\nexport default Recipes;\r\n  \r\nconst styles = StyleSheet.create({\r\n    tinyLogo: {\r\n      width: 200,\r\n      height: 200,\r\n      alignItems: 'center',\r\n      marginLeft: 270\r\n    },\r\n    getStartedText: {\r\n      fontSize: 17,\r\n      lineHeight: 24,\r\n      textAlign: 'center',\r\n    },\r\n    textInput: {\r\n      color: 'white',\r\n      fontSize: 50\r\n    },\r\n    Button: {paddingTop: '10px'},\r\n    scrollView: {\r\n      marginHorizontal: 20,\r\n      width: 760,\r\n      height: 480,\r\n    },\r\n    recipeName: {\r\n      fontSize: 20,\r\n      textAlign: 'center',\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}