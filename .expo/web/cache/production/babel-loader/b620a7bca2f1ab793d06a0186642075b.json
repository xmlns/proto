{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"colors\",\"locations\",\"startPoint\",\"endPoint\"];import*as React from'react';import View from\"react-native-web/dist/exports/View\";import normalizeColor from'react-native-web/src/modules/normalizeColor';export default function NativeLinearGradient(_ref){var colors=_ref.colors,locations=_ref.locations,startPoint=_ref.startPoint,endPoint=_ref.endPoint,props=_objectWithoutProperties(_ref,_excluded);var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),layout=_React$useState2[0],setLayout=_React$useState2[1];var _ref2=layout!=null?layout:{},_ref2$width=_ref2.width,width=_ref2$width===void 0?1:_ref2$width,_ref2$height=_ref2.height,height=_ref2$height===void 0?1:_ref2$height;var pseudoAngle=React.useMemo(function(){var getControlPoints=function getControlPoints(){var correctedStartPoint=[0,0];if(Array.isArray(startPoint)){correctedStartPoint=[startPoint[0]!=null?startPoint[0]:0.0,startPoint[1]!=null?startPoint[1]:0.0];}var correctedEndPoint=[0.0,1.0];if(Array.isArray(endPoint)){correctedEndPoint=[endPoint[0]!=null?endPoint[0]:0.0,endPoint[1]!=null?endPoint[1]:1.0];}return[correctedStartPoint,correctedEndPoint];};var _getControlPoints=getControlPoints(),_getControlPoints2=_slicedToArray(_getControlPoints,2),start=_getControlPoints2[0],end=_getControlPoints2[1];start[0]*=width;end[0]*=width;start[1]*=height;end[1]*=height;var py=end[1]-start[1];var px=end[0]-start[0];return 90+Math.atan2(py,px)*180/Math.PI;},[width,height,startPoint,endPoint]);var gradientColors=React.useMemo(function(){return colors.map(function(color,index){var hexColor=normalizeColor(color);var output=hexColor;if(locations&&locations[index]){var location=Math.max(0,Math.min(1,locations[index]));var percentage=location*100;output+=\" \"+percentage+\"%\";}return output;});},[colors,locations]);var colorStyle=gradientColors.join(',');var backgroundImage=\"linear-gradient(\"+pseudoAngle+\"deg, \"+colorStyle+\")\";return React.createElement(View,Object.assign({},props,{style:[props.style,{backgroundImage:backgroundImage}],onLayout:function onLayout(event){var _event$nativeEvent$la=event.nativeEvent.layout,x=_event$nativeEvent$la.x,y=_event$nativeEvent$la.y,width=_event$nativeEvent$la.width,height=_event$nativeEvent$la.height;var oldLayout=layout!=null?layout:{x:0,y:0,width:1,height:1};if(x!==oldLayout.x||y!==oldLayout.y||width!==oldLayout.width||height!==oldLayout.height){setLayout({x:x,y:y,width:width,height:height});}if(props.onLayout){props.onLayout(event);}}}));}","map":{"version":3,"sources":["../src/NativeLinearGradient.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, View } from 'react-native';\nimport normalizeColor from 'react-native-web/src/modules/normalizeColor';\n\nimport { NativeLinearGradientPoint, NativeLinearGradientProps } from './NativeLinearGradient.types';\n\nexport default function NativeLinearGradient({\n  colors,\n  locations,\n  startPoint,\n  endPoint,\n  ...props\n}: NativeLinearGradientProps): React.ReactElement {\n  const [layout, setLayout] = React.useState<LayoutRectangle | null>(null);\n\n  const { width = 1, height = 1 } = layout ?? {};\n\n  const pseudoAngle = React.useMemo(() => {\n    const getControlPoints = (): NativeLinearGradientPoint[] => {\n      let correctedStartPoint: NativeLinearGradientPoint = [0, 0];\n      if (Array.isArray(startPoint)) {\n        correctedStartPoint = [\n          startPoint[0] != null ? startPoint[0] : 0.0,\n          startPoint[1] != null ? startPoint[1] : 0.0,\n        ];\n      }\n      let correctedEndPoint: NativeLinearGradientPoint = [0.0, 1.0];\n      if (Array.isArray(endPoint)) {\n        correctedEndPoint = [\n          endPoint[0] != null ? endPoint[0] : 0.0,\n          endPoint[1] != null ? endPoint[1] : 1.0,\n        ];\n      }\n      return [correctedStartPoint, correctedEndPoint];\n    };\n\n    const [start, end] = getControlPoints();\n    start[0] *= width;\n    end[0] *= width;\n    start[1] *= height;\n    end[1] *= height;\n    const py = end[1] - start[1];\n    const px = end[0] - start[0];\n\n    return 90 + (Math.atan2(py, px) * 180) / Math.PI;\n  }, [width, height, startPoint, endPoint]);\n\n  const gradientColors = React.useMemo(() => {\n    return colors.map((color: number, index: number): string => {\n      const hexColor = normalizeColor(color);\n      let output = hexColor;\n      if (locations && locations[index]) {\n        const location = Math.max(0, Math.min(1, locations[index]));\n        // Convert 0...1 to 0...100\n        const percentage = location * 100;\n        output += ` ${percentage}%`;\n      }\n      return output;\n    });\n  }, [colors, locations]);\n\n  const colorStyle = gradientColors.join(',');\n  const backgroundImage = `linear-gradient(${pseudoAngle}deg, ${colorStyle})`;\n  // TODO(Bacon): In the future we could consider adding `backgroundRepeat: \"no-repeat\"`. For more\n  // browser support.\n  return (\n    <View\n      {...props}\n      style={[\n        props.style,\n        // @ts-ignore: [ts] Property 'backgroundImage' does not exist on type 'ViewStyle'.\n        { backgroundImage },\n      ]}\n      onLayout={event => {\n        const { x, y, width, height } = event.nativeEvent.layout;\n        const oldLayout = layout ?? { x: 0, y: 0, width: 1, height: 1 };\n        // don't set new layout state unless the layout has actually changed\n        if (\n          x !== oldLayout.x ||\n          y !== oldLayout.y ||\n          width !== oldLayout.width ||\n          height !== oldLayout.height\n        ) {\n          setLayout({ x, y, width, height });\n        }\n\n        if (props.onLayout) {\n          props.onLayout(event);\n        }\n      }}\n    />\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}