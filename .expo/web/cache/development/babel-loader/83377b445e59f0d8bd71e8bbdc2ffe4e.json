{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amogh\\\\TestReactNativeApp\\\\components\\\\EditScreenInfo.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Recipes from \"./recipes\";\nimport Colors from \"../constants/Colors\";\nimport { MonoText } from \"./StyledText\";\nimport { Text, View } from \"./Themed\";\nexport default function EditScreenInfo(_ref) {\n  var path = _ref.path;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.getStartedContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.getStartedText,\n    lightColor: \"rgba(0,0,0,0.8)\",\n    darkColor: \"rgba(255,255,255,0.8)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Open up the code for this screen:\"), React.createElement(View, {\n    style: [styles.codeHighlightContainer, styles.homeScreenFilename],\n    darkColor: \"rgba(255,255,255,0.05)\",\n    lightColor: \"rgba(0,0,0,0.05)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(MonoText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, path)), React.createElement(Recipes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.getStartedText,\n    lightColor: \"rgba(0,0,0,0.8)\",\n    darkColor: \"rgba(255,255,255,0.8)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Change any of the text, save the file, and your app will automatically update.\")), React.createElement(View, {\n    style: styles.helpContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleHelpPress,\n    style: styles.helpLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.helpLinkText,\n    lightColor: Colors.light.tint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Tap here if your app doesn't automatically update after making changes\"))));\n}\nvar baseUrl = 'https://api.spoonacular.com/recipes/';\nvar apiKey = '05f3e5cbe3194079a0484c97fa512c66';\n\nvar safeEncodeURIComponent = function safeEncodeURIComponent(raw) {\n  return encodeURIComponent(raw).replace(/'/g, \"%27\");\n};\n\nvar getRecipesFromQuery = function getRecipesFromQuery(query, numberOfResults) {\n  var apiUrl, response, json;\n  return _regeneratorRuntime.async(function getRecipesFromQuery$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          apiUrl = safeEncodeURIComponent(baseUrl + \"/recipes/complexSearch?apiKey=\" + apiKey + \"&query=\" + query + \"\\n                                                              \" + (numberOfResults && numberOfResults > 0 ? '&number=' : '') + numberOfResults);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(apiUrl));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          json = _context.sent;\n          setResults(json.results);\n          _context.next = 14;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet');\n}\n\nvar styles = StyleSheet.create({\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/amogh/TestReactNativeApp/components/EditScreenInfo.tsx"],"names":["WebBrowser","React","Recipes","Colors","MonoText","Text","View","EditScreenInfo","path","styles","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","handleHelpPress","helpLink","helpLinkText","light","tint","baseUrl","apiKey","safeEncodeURIComponent","raw","encodeURIComponent","replace","getRecipesFromQuery","query","numberOfResults","apiUrl","fetch","response","json","setResults","results","console","error","openBrowserAsync","StyleSheet","create","tinyLogo","width","height","alignItems","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","fontSize","lineHeight","textAlign","marginTop","paddingVertical"],"mappings":";;AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAgC,OAAhC;;;AAEA,OAAOC,OAAP;AAEA,OAAOC,MAAP;AACA,SAASC,QAAT;AACA,SAASC,IAAT,EAAeC,IAAf;AAEA,eAAe,SAASC,cAAT,OAAoD;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AACjE,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,cADhB;AAEE,IAAA,UAAU,EAAC,iBAFb;AAGE,IAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAQE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACF,MAAM,CAACG,sBAAR,EAAgCH,MAAM,CAACI,kBAAvC,CADT;AAEE,IAAA,SAAS,EAAC,wBAFZ;AAGE,IAAA,UAAU,EAAC,kBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWL,IAAX,CAJF,CARF,EAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAiBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACE,cADhB;AAEE,IAAA,UAAU,EAAC,iBAFb;AAGE,IAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAjBF,CADF,EA0BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACK,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEC,eAA3B;AAA4C,IAAA,KAAK,EAAEN,MAAM,CAACO,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,YAApB;AAAkC,IAAA,UAAU,EAAEd,MAAM,CAACe,KAAP,CAAaC,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EADF,CADF,CA1BF,CADF;AAoCD;AAED,IAAMC,OAAO,GAAG,sCAAhB;AACA,IAAMC,MAAM,GAAG,kCAAf;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,GAAD,EAC/B;AACI,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,CAAwBE,OAAxB,CAAgC,IAAhC,EAAsC,KAAtC,CAAP;AACH,CAHD;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAOC,KAAP,EAAsBC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBC,UAAAA,MAFkB,GAETP,sBAAsB,CAAIF,OAAJ,sCAA4CC,MAA5C,eAA4DM,KAA5D,yEACuBC,eAAe,IAAKA,eAAe,GAAG,CAAtC,GAA0C,UAA1C,GAAuD,EAD9E,IACmFA,eADnF,CAFb;AAAA;AAAA,2CAKDE,KAAK,CAACD,MAAD,CALJ;;AAAA;AAKlBE,UAAAA,QALkB;AAAA;AAAA,2CAMLA,QAAQ,CAACC,IAAT,EANK;;AAAA;AAMlBA,UAAAA,IANkB;AAOxBC,UAAAA,UAAU,CAACD,IAAI,CAACE,OAAN,CAAV;AAPwB;AAAA;;AAAA;AAAA;AAAA;AASxBC,UAAAA,OAAO,CAACC,KAAR;;AATwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAaA,SAASrB,eAAT,GAA2B;AACzBf,EAAAA,UAAU,CAACqC,gBAAX,CACE,wFADF;AAGD;;AAED,IAAM5B,MAAM,GAAG6B,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GADqB;AAK/BhC,EAAAA,mBAAmB,EAAE;AACnBiC,IAAAA,UAAU,EAAE,QADO;AAEnBC,IAAAA,gBAAgB,EAAE;AAFC,GALU;AAS/B/B,EAAAA,kBAAkB,EAAE;AAClBgC,IAAAA,cAAc,EAAE;AADE,GATW;AAY/BjC,EAAAA,sBAAsB,EAAE;AACtBkC,IAAAA,YAAY,EAAE,CADQ;AAEtBC,IAAAA,iBAAiB,EAAE;AAFG,GAZO;AAgB/BpC,EAAAA,cAAc,EAAE;AACdqC,IAAAA,QAAQ,EAAE,EADI;AAEdC,IAAAA,UAAU,EAAE,EAFE;AAGdC,IAAAA,SAAS,EAAE;AAHG,GAhBe;AAqB/BpC,EAAAA,aAAa,EAAE;AACbqC,IAAAA,SAAS,EAAE,EADE;AAEbP,IAAAA,gBAAgB,EAAE,EAFL;AAGbD,IAAAA,UAAU,EAAE;AAHC,GArBgB;AA0B/B3B,EAAAA,QAAQ,EAAE;AACRoC,IAAAA,eAAe,EAAE;AADT,GA1BqB;AA6B/BnC,EAAAA,YAAY,EAAE;AACZiC,IAAAA,SAAS,EAAE;AADC;AA7BiB,CAAlB,CAAf","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport React, { useState } from 'react';\nimport { StyleSheet, TouchableOpacity, TextInput, FlatList, Image } from 'react-native';\nimport Recipes from './recipes';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\n\nexport default function EditScreenInfo({ path }: { path: string }) {\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Open up the code for this screen:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\n          darkColor=\"rgba(255,255,255,0.05)\"\n          lightColor=\"rgba(0,0,0,0.05)\">\n          <MonoText>{path}</MonoText>\n        </View>\n        \n        <Recipes></Recipes>\n\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Change any of the text, save the file, and your app will automatically update.\n        </Text>\n      </View>\n\n      <View style={styles.helpContainer}>\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\n            Tap here if your app doesn't automatically update after making changes\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst baseUrl = 'https://api.spoonacular.com/recipes/';\nconst apiKey = '05f3e5cbe3194079a0484c97fa512c66';\n\nconst safeEncodeURIComponent = (raw: string) =>\n{\n    return encodeURIComponent(raw).replace(/'/g, \"%27\");\n}\n\nconst getRecipesFromQuery = async (query: string, numberOfResults: number) => {\n  try {\n    const apiUrl = safeEncodeURIComponent(`${baseUrl}/recipes/complexSearch?apiKey=${apiKey}&query=${query}\n                                                              ${numberOfResults && (numberOfResults > 0)? '&number=' : ''}${numberOfResults}`);\n\n    const response = await fetch(apiUrl);\n    const json = await response.json();\n    setResults(json.results); \n  } catch (error) {\n    console.error(error);\n  }\n};\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nconst styles = StyleSheet.create({\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}