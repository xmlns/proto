{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\amogh\\\\TestReactNativeApp\\\\components\\\\recipes.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { LinearGradient } from 'expo-linear-gradient';\nvar baseUrl = 'https://api.spoonacular.com/recipes/';\nvar apiKey = '05f3e5cbe3194079a0484c97fa512c66';\n\nvar safeEncodeURIComponent = function safeEncodeURIComponent(raw) {\n  return encodeURIComponent(raw).replace(/'/g, \"%27\");\n};\n\nvar _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n\nvar _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    query = _useState4[0],\n    setQuery = _useState4[1];\n\nvar _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    results = _useState6[0],\n    setResults = _useState6[1];\n\nvar placeholderText = \"Type a list of ingredients (comma-seperated)\";\n\nvar RecipeSearch = function RecipeSearch(props) {\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  });\n};\n\nvar Recipes = function Recipes(props) {\n  return React.createElement(View, {\n    style: {\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.getStartedText,\n    lightColor: \"rgba(0,0,0,0.8)\",\n    darkColor: \"rgba(255,255,255,0.8)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Search for Recipes:\"), React.createElement(TextInput, {\n    style: styles.getStartedText,\n    onChangeText: setQuery,\n    value: query,\n    placeholder: placeholderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Go!\",\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", useEffect(function () {\n                setLoading(true);\n                getRecipesFromQuery();\n              }, []));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), isLoading ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }\n  }, \"Loading...\") : React.createElement(LinearGradient, {\n    colors: [\"rgba(0,0,0,0.05)\", \"rgba(0,0,0,0)\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: results,\n    keyExtractor: function keyExtractor(_ref) {\n      var id = _ref.id;\n      return id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 43\n        }\n      }, item.title);\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Image, {\n        source: {\n          uri: item.image.toString()\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 43\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Recipes;\n\nvar getRecipesFromQuery = function getRecipesFromQuery(query, numberOfResults) {\n  var apiUrl, response, json;\n  return _regeneratorRuntime.async(function getRecipesFromQuery$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          apiUrl = safeEncodeURIComponent(baseUrl + \"/recipes/complexSearch?apiKey=\" + apiKey + \"&query=\" + query + \"\\n                                                                \" + (numberOfResults && numberOfResults > 0 ? '&number=' : '') + numberOfResults);\n          console.error(\"formed URL: \" + apiUrl);\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(fetch(apiUrl));\n\n        case 5:\n          response = _context2.sent;\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          json = _context2.sent;\n          setResults(json.results);\n          setLoading(false);\n          _context2.next = 16;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 13]], Promise);\n};\n\nvar styles = StyleSheet.create({\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/amogh/TestReactNativeApp/components/recipes.js"],"names":["WebBrowser","React","useState","LinearGradient","baseUrl","apiKey","safeEncodeURIComponent","raw","encodeURIComponent","replace","isLoading","setLoading","query","setQuery","results","setResults","placeholderText","RecipeSearch","props","Recipes","padding","styles","getStartedText","useEffect","getRecipesFromQuery","id","toString","item","title","uri","image","numberOfResults","apiUrl","console","error","fetch","response","json","StyleSheet","create","tinyLogo","width","height","fontSize","lineHeight","textAlign"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, TouchableOpacity, TextInput, FlatList, Image } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst baseUrl = 'https://api.spoonacular.com/recipes/';\r\nconst apiKey = '05f3e5cbe3194079a0484c97fa512c66';\r\n\r\nconst safeEncodeURIComponent = (raw) =>\r\n{\r\n    return encodeURIComponent(raw).replace(/'/g, \"%27\");\r\n}\r\n\r\nconst [isLoading, setLoading] = useState(false);\r\nconst [query, setQuery] = useState('');\r\nconst [results, setResults] = useState([]);\r\n\r\nconst placeholderText = \"Type a list of ingredients (comma-seperated)\";\r\n\r\nconst RecipeSearch = props =>\r\n{\r\n    return (\r\n        <View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst Recipes = props =>\r\n{\r\n    return (\r\n        <View style={{ padding: 20 }}>\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Search for Recipes:\r\n        </Text>\r\n\r\n        <TextInput\r\n          style={styles.getStartedText}\r\n          onChangeText={setQuery}\r\n          value={query}\r\n          placeholder={placeholderText}\r\n        />\r\n\r\n        <Button title=\"Go!\" onPress={ async () => useEffect(() => { setLoading(true); getRecipesFromQuery(); }, []) } />\r\n        {isLoading ? <Text>Loading...</Text> :\r\n        (\r\n        <LinearGradient colors={[\"rgba(0,0,0,0.05)\", \"rgba(0,0,0,0)\"]}>\r\n            <FlatList\r\n                data={results}\r\n                keyExtractor={({ id }) => id.toString() }\r\n                renderItem={({ item }) => <Text>{item.title}</Text>}\r\n                renderItem={({ item }) => <Image source={{ uri: item.image.toString() }}></Image>} \r\n            />\r\n        </LinearGradient>)}\r\n        </View>\r\n    );\r\n};\r\nexport default Recipes;\r\n\r\nconst getRecipesFromQuery = async (query, numberOfResults) => {\r\n    try {\r\n      const apiUrl = safeEncodeURIComponent(`${baseUrl}/recipes/complexSearch?apiKey=${apiKey}&query=${query}\r\n                                                                ${numberOfResults && (numberOfResults > 0)? '&number=' : ''}${numberOfResults}`);\r\n        \r\n      console.error(`formed URL: ${apiUrl}`);\r\n      const response = await fetch(apiUrl);\r\n      const json = await response.json();\r\n      setResults(json.results); \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n};\r\n  \r\nconst styles = StyleSheet.create({\r\n    tinyLogo: {\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n    getStartedText: {\r\n      fontSize: 17,\r\n      lineHeight: 24,\r\n      textAlign: 'center',\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}