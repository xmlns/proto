{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amogh\\\\TestReactNativeApp\\\\App.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nvar baseUrl = 'https://api.spoonacular.com/recipes/';\nvar apiKey = '05f3e5cbe3194079a0484c97fa512c66';\n\nvar safeEncodeURIComponent = function safeEncodeURIComponent(raw) {\n  return encodeURIComponent(raw).replace(/'/g, \"%27\");\n};\n\nvar getRecipesFromQuery = function getRecipesFromQuery(query, numberOfResults) {\n  var apiUrl, response, json;\n  return _regeneratorRuntime.async(function getRecipesFromQuery$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          apiUrl = safeEncodeURIComponent(baseUrl + \"/recipes/complexSearch?apiKey=\" + apiKey + \"&query=\" + query + \"\\n                                                              \" + (numberOfResults && numberOfResults > 0 ? '&number=' : '') + numberOfResults);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(apiUrl));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json.results);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\n\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(SafeAreaProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, React.createElement(Navigation, {\n      colorScheme: colorScheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), React.createElement(StatusBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/amogh/TestReactNativeApp/App.tsx"],"names":["StatusBar","React","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","baseUrl","apiKey","safeEncodeURIComponent","raw","encodeURIComponent","replace","getRecipesFromQuery","query","numberOfResults","apiUrl","fetch","response","json","results","console","error","App","isLoadingComplete","colorScheme"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,OAAO,GAAG,sCAAhB;AACA,IAAMC,MAAM,GAAG,kCAAf;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,GAAD,EAC/B;AACI,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,CAAwBE,OAAxB,CAAgC,IAAhC,EAAsC,KAAtC,CAAP;AACH,CAHD;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAOC,KAAP,EAAsBC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBC,UAAAA,MAFkB,GAETP,sBAAsB,CAAIF,OAAJ,sCAA4CC,MAA5C,eAA4DM,KAA5D,yEACuBC,eAAe,IAAKA,eAAe,GAAG,CAAtC,GAA0C,UAA1C,GAAuD,EAD9E,IACmFA,eADnF,CAFb;AAAA;AAAA,2CAKDE,KAAK,CAACD,MAAD,CALJ;;AAAA;AAKlBE,UAAAA,QALkB;AAAA;AAAA,2CAMLA,QAAQ,CAACC,IAAT,EANK;;AAAA;AAMlBA,UAAAA,IANkB;AAAA,2CAOjBA,IAAI,CAACC,OAPY;;AAAA;AAAA;AAAA;AASxBC,UAAAA,OAAO,CAACC,KAAR;;AATwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAaA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,iBAAiB,GAAGpB,kBAAkB,EAA5C;AACA,MAAMqB,WAAW,GAAGpB,cAAc,EAAlC;;AAEA,MAAI,CAACmB,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAEC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;AAGF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nconst baseUrl = 'https://api.spoonacular.com/recipes/';\nconst apiKey = '05f3e5cbe3194079a0484c97fa512c66';\n\nconst safeEncodeURIComponent = (raw: string) =>\n{\n    return encodeURIComponent(raw).replace(/'/g, \"%27\");\n}\n\nconst getRecipesFromQuery = async (query: string, numberOfResults: number) => {\n  try {\n    const apiUrl = safeEncodeURIComponent(`${baseUrl}/recipes/complexSearch?apiKey=${apiKey}&query=${query}\n                                                              ${numberOfResults && (numberOfResults > 0)? '&number=' : ''}${numberOfResults}`);\n\n    const response = await fetch(apiUrl);\n    const json = await response.json();\n    return json.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n\n  \n}\n"]},"metadata":{},"sourceType":"module"}