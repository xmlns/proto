{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\amogh\\\\TestReactNativeApp\\\\components\\\\recipes.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Text, View } from \"./Themed\";\nimport { ScrollView } from 'react-native-gesture-handler';\nvar baseUrl = 'https://api.spoonacular.com/recipes';\nvar apiKey = '05f3e5cbe3194079a0484c97fa512c66';\n\nvar safeEncodeURIComponent = function safeEncodeURIComponent(raw) {\n  return encodeURIComponent(raw).replace(/'/g, \"%27\");\n};\n\nvar placeholderText = \"Type a list of ingredients\";\n\nvar RecipeSearch = function RecipeSearch(props) {\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  });\n};\n\nvar Recipes = function Recipes(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      results = _useState6[0],\n      setResults = _useState6[1];\n\n  var getRecipesFromQuery = function getRecipesFromQuery() {\n    var apiUrl, response, json;\n    return _regeneratorRuntime.async(function getRecipesFromQuery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(query && query.toString().length > 0)) {\n              _context.next = 13;\n              break;\n            }\n\n            apiUrl = baseUrl + \"/complexSearch?apiKey=\" + apiKey + \"&query=\" + query;\n            console.log(\"formed URL: \" + apiUrl);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(apiUrl));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            json = _context.sent;\n            console.log(json.results);\n            setResults(json.results);\n            setLoading(false);\n\n          case 13:\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: setQuery,\n    value: query,\n    placeholder: placeholderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Go!\",\n    style: styles.Button,\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              getRecipesFromQuery();\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), isLoading ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  }, \"Loading...\") : React.createElement(LinearGradient, {\n    colors: [\"rgba(0,0,0,0.05)\", \"rgba(0,0,0,0)\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: results,\n    keyExtractor: function keyExtractor(result) {\n      return result.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.recipeName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      }, item.title), React.createElement(Image, {\n        style: styles.tinyLogo,\n        source: {\n          uri: item.image.toString()\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Recipes;\nvar styles = StyleSheet.create({\n  tinyLogo: {\n    width: 100,\n    height: 100\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  textInput: {\n    color: 'white',\n    fontSize: 50\n  },\n  Button: {\n    paddingTop: '10px'\n  },\n  scrollView: {\n    marginHorizontal: 20,\n    width: 760,\n    height: 480\n  },\n  recipeName: {\n    fontSize: 20,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/amogh/TestReactNativeApp/components/recipes.js"],"names":["React","useEffect","useState","LinearGradient","Text","View","ScrollView","baseUrl","apiKey","safeEncodeURIComponent","raw","encodeURIComponent","replace","placeholderText","RecipeSearch","props","Recipes","isLoading","setLoading","query","setQuery","results","setResults","getRecipesFromQuery","toString","length","apiUrl","console","log","fetch","response","json","error","styles","textInput","Button","scrollView","result","id","item","recipeName","title","tinyLogo","uri","image","StyleSheet","create","width","height","getStartedText","fontSize","lineHeight","textAlign","color","paddingTop","marginHorizontal","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, StyleSheet, TouchableOpacity, TextInput, FlatList, Image } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nimport { Text, View } from './Themed';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nconst baseUrl = 'https://api.spoonacular.com/recipes';\r\nconst apiKey = '05f3e5cbe3194079a0484c97fa512c66';\r\n\r\nconst safeEncodeURIComponent = (raw) =>\r\n{\r\n    return encodeURIComponent(raw).replace(/'/g, \"%27\");\r\n}\r\n\r\n\r\nconst placeholderText = \"Type a list of ingredients\";\r\n\r\nconst RecipeSearch = props =>\r\n{\r\n    return (\r\n        <View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst Recipes = props =>\r\n{\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [results, setResults] = useState([]);\r\n\r\n    const getRecipesFromQuery = async () => {\r\n        try {\r\n            if (query && query.toString().length > 0) {\r\n              let apiUrl = `${baseUrl}/complexSearch?apiKey=${apiKey}&query=${query}`;\r\n            \r\n              console.log(`formed URL: ${apiUrl}`);\r\n              const response = await fetch(apiUrl);\r\n              const json = await response.json();\r\n              console.log(json.results);\r\n              setResults(json.results);\r\n              setLoading(false);\r\n            }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          onChangeText={setQuery}\r\n          value={query}\r\n          placeholder={placeholderText}\r\n        />\r\n\r\n        <Button title=\"Go!\" style={styles.Button} onPress={async () => { setLoading(true); getRecipesFromQuery() }} />\r\n\r\n\r\n        {isLoading ? <Text>Loading...</Text> :\r\n        (\r\n        <LinearGradient colors={[\"rgba(0,0,0,0.05)\", \"rgba(0,0,0,0)\"]}>\r\n            <ScrollView style={styles.scrollView}>\r\n            <FlatList\r\n                data={results}\r\n                keyExtractor={ result => result.id.toString() }\r\n                renderItem={({item}) => (\r\n                    <View>\r\n                      <Text style={styles.recipeName}>{item.title}</Text>\r\n                      <Image style={styles.tinyLogo} source={{ uri: item.image.toString() }}></Image>\r\n                    </View>\r\n                )}\r\n                />\r\n            </ScrollView>\r\n        </LinearGradient>)}\r\n        </View>\r\n    );\r\n};\r\nexport default Recipes;\r\n  \r\nconst styles = StyleSheet.create({\r\n    tinyLogo: {\r\n      width: 100,\r\n      height: 100,\r\n    },\r\n    getStartedText: {\r\n      fontSize: 17,\r\n      lineHeight: 24,\r\n      textAlign: 'center',\r\n    },\r\n    textInput: {\r\n      color: 'white',\r\n      fontSize: 50\r\n    },\r\n    Button: {paddingTop: '10px'},\r\n    scrollView: {\r\n      marginHorizontal: 20,\r\n      width: 760,\r\n      height: 480,\r\n    },\r\n    recipeName: {\r\n      fontSize: 20,\r\n      alignItems: 'center',\r\n      \r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}