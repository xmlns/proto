{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amogh\\\\TestReactNativeApp\\\\components\\\\EditScreenInfo.tsx\";\nimport * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport 'react-native';\nimport Colors from \"../constants/Colors\";\nimport { MonoText } from \"./StyledText\";\nimport { Text, View } from \"./Themed\";\nexport default function EditScreenInfo(_ref) {\n  var path = _ref.path;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.getStartedContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.getStartedText,\n    lightColor: \"rgba(0,0,0,0.8)\",\n    darkColor: \"rgba(255,255,255,0.8)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Open up the code for this screen:\"), React.createElement(View, {\n    style: [styles.codeHighlightContainer, styles.homeScreenFilename],\n    darkColor: \"rgba(255,255,255,0.05)\",\n    lightColor: \"rgba(0,0,0,0.05)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(MonoText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, path)), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: onChangeText,\n    value: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.getStartedText,\n    lightColor: \"rgba(0,0,0,0.8)\",\n    darkColor: \"rgba(255,255,255,0.8)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Change any of the text, save the file, and your app will automatically update.\")), React.createElement(View, {\n    style: styles.helpContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleHelpPress,\n    style: styles.helpLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.helpLinkText,\n    lightColor: Colors.light.tint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Tap here if your app doesn't automatically update after making changes\"))));\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet');\n}\n\nvar styles = StyleSheet.create({\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/amogh/TestReactNativeApp/components/EditScreenInfo.tsx"],"names":["WebBrowser","React","Colors","MonoText","Text","View","EditScreenInfo","path","styles","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","input","onChangeText","text","helpContainer","handleHelpPress","helpLink","helpLinkText","light","tint","openBrowserAsync","StyleSheet","create","alignItems","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","fontSize","lineHeight","textAlign","marginTop","paddingVertical"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity, TextInput } from 'react-native';\nimport {  } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\n\nexport default function EditScreenInfo({ path }: { path: string }) {\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Open up the code for this screen:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\n          darkColor=\"rgba(255,255,255,0.05)\"\n          lightColor=\"rgba(0,0,0,0.05)\">\n          <MonoText>{path}</MonoText>\n        </View>\n\n        <TextInput\n        style={styles.input}\n        onChangeText={onChangeText}\n        value={text}\n        />\n        \n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Change any of the text, save the file, and your app will automatically update.\n        </Text>\n      </View>\n\n      <View style={styles.helpContainer}>\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\n            Tap here if your app doesn't automatically update after making changes\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nconst styles = StyleSheet.create({\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}